Node :
{
    name : "root"
    Import : "dfgeom.psl"

    Template :
    {
        name : "Difference"
        properties : {
            name : ""
            left : ""
            right: ""
        }
        Node : {
            name : str('Difference(')+str(name)+')'
            Python : '''
                     import Sofa, pslengine, os
                     from pslengine import instanciate, processNode
                     self.addNewData("type", "Meta-type", "", "s", "shape.Difference")
                     if len(args) == 2:
                        processNode(self, "Node", [args[0]], [], {"currentpath" : os.getcwd()}, False)
                        processNode(self, "Node", [args[1]], [], {"currentpath" : os.getcwd()}, False)
                     else:
                        Sofa.msg_error(self, "Difference requires two parameters") ;
                     '''
        }
    }

    Template :
    {
        name : "ShapeTree"
        properties : {
            name : ""
            bbox : "-1 -1 -1 1 1 1"
        }

        Node : {
            name : str(name)
            Node : {
                name : str("ShapeTree(")+str(name)+")"
                Python : '''
                         import Sofa, pslengine, os
                         from pslengine import instanciate, processNode
                         processNode(self, "Node", args, [], {"currentpath" : os.getcwd()}, False)
                         self.addNewData("type", "Meta-type", "", "s", "shape.ShapeTree")
                         '''
            }
            CustomField : {
                name : "myField"
                function : "customshape.evalField"
            }
            PointCloudImplicitFieldVisualization : {
                box : bbox
                field : "@myField"
            }
        }
    }

    Template :
    {
        name : "shape.Sphere"
        properties : {
            name : "shape.Sphere"
        }
        Node : {
            name : "shape.Sphere"
            Python : '''
                     self.addNewData("type", "Meta-type", "", "s", "shape.Sphere")
                     for k,v in args:
                        print("Processing: "+k+ " => "+str(v))
                        if  type(v) == float:
                                self.addNewData(k, "Shape", "The world position of the cube", "f", v)
                        else:
                                self.addNewData(k, "Shape", "The world position of the cube", "p", v)     
                     '''
        }
    }

    Template :
    {
        name : "shape.Box"
        properties : {
            name : "shape.Box"
        }

        Node : {
            name : "shape.Box"
            Python : '''
                     self.addNewData("type", "Meta-type", "", "s", "shape.Box")
                     
                     for k,v in args:
                        print("Processing: "+k+ " => "+str(v))
                        if type(v) == float:
                                self.addNewData(k, "Shape", "The world position of the cube", "f", v)
                        else:
                                self.addNewData(k, "Shape", "The world position of the cube", "p", v)                        
                     '''
        }
    }
    


    ShapeTree : {
        name : "shape2"
        Difference : {
            shape.Box : {
                size: eval("[1.0, 1.0, 1.0]")
            }
            shape.Sphere : {
                name : "sphere1"
                center : eval("[0.0, 0.0, 0.0]")
                radius : 1.2
            }
       }
    }

    PythonScriptController : 
    {
        name : "controller"
        classname: str("Updater")
        filename: str("updater.py")
        
    }   
    Python : '''
             import updater
             updater.brin = root.shape2.myField
             ''' 

}

