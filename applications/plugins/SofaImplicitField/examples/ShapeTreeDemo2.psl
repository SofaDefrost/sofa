Node :
{
    name : "root"
    Import : "dfgeom.psl"

    Template :
    {
        name : "Difference"
        properties : {
            name : ""
            left : ""
            right: ""
        }
        Node : {
            name : p"'Difference('+str(name)+')'"
            Python : '''
                     import Sofa, pslengine, os
                     from pslengine import instanciate, processNode
                     self.addNewData("type", "Meta-type", "", "s", "shape.Difference")
                     if len(args) == 2:
                        processNode(self, "Node", [args[0]], [], {"currentpath" : os.getcwd()}, False)
                        processNode(self, "Node", [args[1]], [], {"currentpath" : os.getcwd()}, False)
                     else:
                        Sofa.msg_error("Difference requires two parameters") ;
                     '''
        }
    }

    Template :
    {
        name : "ShapeTree"
        properties : {
            name : ""
        }

        Node : {
            name : p"name"
        Node : {
            name : p"'ShapeTree('+name+')'"
        Python : '''
                 import Sofa, pslengine, os
                 from pslengine import instanciate, processNode
                 processNode(self, "Node", args, [], {"currentpath" : os.getcwd()}, False)
                 self.addNewData("type", "Meta-type", "", "s", "shape.ShapeTree")
                 '''
        }
            CustomField : {
                name : "myField"
                function : "customshape.evalField"
            }
            PointCloudImplicitFieldVisualization : {
                field : "@myField"
            }
        }
    }

    Template :
    {
        name : "Sphere"
        properties : {
            name : "Sphere"
            position : "0.0 0.0 0.0"
            radius : "1.0"
        }
        Node : {
            name : "Sphere"
        }
    }

    Template :
    {
        name : "shape.Box"
        properties : {
            name : "shape.Box"
        }

        Node : {
            name : "shape.Box"
            Python : '''
                     self.addNewData("type", "Meta-type", "", "s", "shape.Box")
                     for k,v in args:
                        self.addNewData(k, "Shape", "The world position of the cube", "vec3", str(v))

                     '''
        }
    }

    ShapeTree : {
        name : "shape"
        shape.Box : {
            name : "cube1"
            position : "0.0 0.0 0.0"
            size : "1.0 1.0 1.0"
        }
    }

    ShapeTree : {
        name : "shape"
    Difference :
    {
        shape.Box : {
            name : "cube1"
            position : "0.0 0.0 0.0"
            size : "1.0 1.0 1.0"
        }
        Difference : {
            shape.Box : {
                name : "cubeA"
                position : "0.0 0.0 0.0"
                size : "1.0 0.5 0.5"
            }
            shape.Box : {
                name : "cubeB"
                position : "0.0 0.0 0.0"
                size : "1.0 0.5 0.5"
            }
        }
    }
    }
}

