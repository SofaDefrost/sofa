from libc.math cimport sin, sqrt



def evalField(cx,cy,cz):
	cdef double x = cx
	cdef double y = cy
	cdef double z = cz

        #a=((1.0*x-0.0*(z-0.0))/1.0)*((1.0*x-0.0*(z-0.0))/1.0)+((0.0*(x-0.0)+1.0*(y-0.0))/1.0)*((0.0*(x-0.0)+1.0*(y-0.0))/1.0)+((0.0*x+1.0*(z-0.0))/1.0)*((0.0*x+1.0*(z-0.0))/1.0)-1.0
        #b=((1.0*x-0.0*(z-0.0))/1.0)*((1.0*x-0.0*(z-0.0))/1.0)+((0.0*(x-1.0)+1.0*(y-0.0))/1.0)*((0.0*(x-1.0)+1.0*(y-0.0))/1.0)+((0.0*x+1.0*(z-0.0))/1.0)*((0.0*x+1.0*(z-0.0))/1.0)-1.0
        #gradX=(1.0-ind(a,b))*2.0*x/(1.0*1.0)+ind(a,b)*2.0*x/(1.0*1.0)
        #gradY=(1.0-ind(a,b))*2.0*y/(1.0*1.0)+ind(a,b)*2.0*y/(1.0*1.0)
        #gradZ=(1.0-ind(a,b))*2.0*z/(1.0*1.0)+ind(a,b)*2.0*z/(1.0*1.0)

	return  min(((1.0*x-0.0*(z-0.0))/1.0)*((1.0*x-0.0*(z-0.0))/1.0)+((0.0*(x-0.0)+1.0*(y-0.0))/1.0)*((0.0*(x-0.0)+1.0*(y-0.0))/1.0)+((0.0*x+1.0*(z-0.0))/1.0)*((0.0*x+1.0*(z-0.0))/1.0)-1.0,((1.0*x-0.0*(z-0.0))/1.0)*((1.0*x-0.0*(z-0.0))/1.0)+((0.0*(x-1.0)+1.0*(y-0.0))/1.0)*((0.0*(x-1.0)+1.0*(y-0.0))/1.0)+((0.0*x+1.0*(z-0.0))/1.0)*((0.0*x+1.0*(z-0.0))/1.0)-1.0)


