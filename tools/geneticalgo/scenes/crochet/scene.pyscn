import Sofa
import os

def createScene(rootNode):
                rootNode.createObject('RequiredPlugin', pluginName='SoftRobots')
                rootNode.createObject('VisualStyle', displayFlags='showVisualModels hideBehaviorModels showCollisionModels hideBoundingCollisionModels hideForceFields showInteractionForceFields hideWireframe')
                rootNode.createObject('BackgroundSetting', color="1 1 1")
                rootNode.createObject('FreeMotionAnimationLoop')
                rootNode.createObject('GenericConstraintSolver', maxIterations='250', printLog='1', tolerance = '0.0000001')
                rootNode.findData('gravity').value='0 -9.810 0'
                rootNode.createObject('PythonScriptController', filename="controller.py", classname="controller")

                shape = rootNode.createChild("Shape")
                #shape.createObject("EulerImplicitSolver", name="cg_odesolver",  printLog="0", rayleighMass="0.1", rayleighStiffness="0.1")
                #shape.createObject("CGLinearSolver", template="GraphScattered", name="linear solver",  iterations="25",  tolerance="1e-09", threshold="1e-09")

                shape.createObject("CustomField", name="shape", function="shape.evalField")

                #Mesh component
                mesh=shape.createObject("MeshGenerationFromImplicitShape", meshingzone_center="0.0 0.0095 0.005", meshingzone_radius="0.0150", name="mesh", facet_size="0.0004", cell_size="0.0003", scalarfield="@shape", drawTetras="true")



                #accordion"
                accordion = rootNode.createChild('accordion')
                accordion.createObject('EulerImplicit', name='odesolver', rayleighMass="0.1", rayleighStiffness="0.1")
                accordion.createObject('ShewchukPCGLinearSolver', iterations='15', name='linearsolver', tolerance='1e-5', preconditioners='preconditioner', use_precond='true', update_step='1')
                accordion.createObject('TetrahedronSetTopologyContainer', position='@../Shape/mesh.outputPoints', tetrahedra='@../Shape/mesh.outputTetras', name='container')
                accordion.createObject('TetrahedronSetTopologyModifier')
                accordion.createObject('TetrahedronSetTopologyAlgorithms', template='Vec3d')
                accordion.createObject('TetrahedronSetGeometryAlgorithms', template='Vec3d')


                accordion.createObject('MechanicalObject', name='tetras', src="@container", template='Vec3d', showIndices='false', showIndicesScale='4e-5', rx='0', dz='0')
                accordion.createObject('UniformMass', totalmass='.005')
                accordion.createObject('TetrahedronFEMForceField', template='Vec3d', name='FEM', method='large', poissonRatio='0.3',  youngModulus='130000000')
                accordion.createObject('BoxROI', name='boxROI', box='-0.0005 0.008  -0.005  0.005 0.010 0.0010', drawBoxes='true', position="@tetras.rest_position",tetrahedra="@container.tetrahedra")
                accordion.createObject('FixedConstraint', indices='@boxROI.indices')
                #accordion.createObject('RestShapeSpringsForceField', points='@boxROI.indices', stiffness='1e12')
                accordion.createObject('BoxROI', name='boxROI2', box=' 0.003 -0.002 0  0.004 -0.00055 0.0010', drawBoxes='true', position="@tetras.rest_position", tetrahedra="@container.tetrahedra")
                accordion.createObject('ConstantForceField', indices='@boxROI2.indices', totalForce="0.0 0.4 0 ", arrowSizeCoef=".2")

                accordion.createObject('SparseLDLSolver', name='preconditioner')
                accordion.createObject('LinearSolverConstraintCorrection', solverName='preconditioner')

    #                accordion/accordionVisu
                accordionVisu = accordion.createChild('visu')
                accordionVisu.createObject('TriangleSetTopologyContainer', name='container')
                accordionVisu.createObject('TriangleSetTopologyModifier')
                accordionVisu.createObject('TriangleSetTopologyAlgorithms', template='Vec3d')
                accordionVisu.createObject('TriangleSetGeometryAlgorithms', template='Vec3d')
                accordionVisu.createObject('Tetra2TriangleTopologicalMapping', name='Mapping', input="@../container", output="@container")

                accordionVisu.createObject('OglModel', template='ExtVec3f', color='0.3 0.2 0.2 0.6')
                accordionVisu.createObject('IdentityMapping')

                accordionMarkedPoints = accordion.createChild('markedPositions')
                accordionMarkedPoints.createObject('MechanicalObject', position="0.0035 -0.00125 0.0005", name='markedPoints', showObject = "true", showObjectScale = "10.0" )
                accordionMarkedPoints.createObject('BarycentricMapping')

                return rootNode

